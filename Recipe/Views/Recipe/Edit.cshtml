@model Recipe.Models.RecipeAddEditViewModel

@using (Html.BeginForm("Edit", "Recipe", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.HiddenFor(m => m.Recipe.RecipeId)
        <div class="row">
            <div style="width: 40%">
                <h3>General</h3>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Recipe.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Recipe.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recipe.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Recipe.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Recipe.Description, new { htmlAttributes = new { @class = "form-control", rows = 6 } })
                        @Html.ValidationMessageFor(model => model.Recipe.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Recipe.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Recipe.Time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recipe.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Recipe.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Recipe.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recipe.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div style="width: 60%">
                <h3>Ingredients</h3>
                <div class="box">
                    <table class="table table-condensed" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th class="text-center">Amount</th>
                                <th class="text-center">Units</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Html.DropDownListFor(m => m.NewIngredientName, ViewBag.IngNames as IEnumerable<SelectListItem>, new { @class = "form-control" })</td>
                                <td>@Html.EditorFor(m => m.NewIngredientAmount, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EnumDropDownListFor(m => m.NewIngredientUnits, new { @class = "form-control" })</td>
                                <td>
                                    <input type="submit" name="submit" value="Add" class="btn btn-sm" style="font-size:10px;" />
                                </td>
                            </tr>
                            @for (int i = 0; i < Model.Recipe.Ingredients.Count(); i++)
                            {
                                <tr>
                                    @Html.HiddenFor(m => m.Recipe.Ingredients[i].IngredientAmountId)
                                    @Html.HiddenFor(m => m.Recipe.Ingredients[i].Ingredient.Name)
                                    @Html.HiddenFor(m => m.Recipe.Ingredients[i].Amount)
                                    @Html.HiddenFor(m => m.Recipe.Ingredients[i].UnitOfMeasurement)
                                    <td>@Html.DisplayFor(m => m.Recipe.Ingredients[i].Ingredient.Name)</td>
                                    <td class="text-center">@Html.DisplayFor(m => m.Recipe.Ingredients[i].Amount)</td>
                                    <td class="text-center">@Html.DisplayFor(m => m.Recipe.Ingredients[i].UnitOfMeasurement)</td>
                                    <td><input type="submit" name="submit" value="Delete" class="btn btn-sm" style="font-size:10px;" formmethod="post" formaction="/Recipe/DeleteIngredient?name=@(Model.Recipe.Ingredients[i].Ingredient.Name)&amount=@(Model.Recipe.Ingredients[i].Amount)" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="submit" value="Save" class="btn btn-default" />
        </div>
    </div>   
}
<div>
    @Html.ActionLink("Back to List", "AllRecipe", null, new { @class = "btn btn-default" })
</div>
